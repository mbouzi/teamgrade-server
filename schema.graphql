### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

type Community {
  createdBy: User
  id: Int!
  members: [User!]!
  moderators: [User!]!
  name: String!
  teams: [Team!]!
}

type Competition {
  id: Int!
  location: Location
  matches: [Match!]!
  name: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Location {
  city: String!
  competitions: [Competition!]!
  country: String!
  id: Int!
  players: [Player!]!
  teams: [Team!]!
  users: [User!]!
}

type Match {
  awayteam: Team
  competition: Competition
  date: DateTime!
  hometeam: Team
  id: Int!
  location: Location
  performances: [Performance!]!
  players: [Player!]!
  ratedBy: User
  ratings: [Rating!]!
}

type Mutation {
  addNewMember(communityId: Int!, userId: Int!): Community!
  createCommunity(name: String!, teamId: Int!): Community!
  login(email: String!, password: String!): AuthPayload!
  ratePlayer(communityId: Int!, matchId: Int!, performanceId: Int!, playerId: Int!, score: Int!, seasonId: Int!, teamId: Int!): Rating!
  signup(email: String!, password: String!, username: String!): AuthPayload!
}

type Performance {
  date: DateTime!
  id: Int!
  match: Match
  player: Player
  ratings: [Rating!]!
}

type Player {
  age: Int
  average: Int
  country: Location
  firstname: String!
  id: Int!
  lastname: String!
  matches: [Match!]!
  performances: [Performance!]!
  ratings: [Rating!]!
  team: Team
  userAverage: Int
}

type Query {
  communityAverage(communityId: Int!, playerId: Int!): Int!
  lastUserRating(playerId: Int!): Int!
}

type Rating {
  community: Community
  createdAt: DateTime!
  id: Int!
  match: Match
  performance: Performance
  player: Player
  score: Int!
  team: Team
  user: User
}

type Team {
  awaygames: [Match!]!
  communities: [Community!]!
  competitions: [Competition!]!
  homegames: [Match!]!
  id: Int!
  location: Location
  name: String!
  players: [Player!]!
  ratings: [Rating!]!
}

type User {
  communities: Community
  createdCommunities: Community
  displayname: String
  email: String!
  id: Int!
  location: Location
  matchesRated: Match
  moderatedCommunities: Community
  profileImg: String
  ratings: [Rating!]!
  username: String!
}